" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
syntax on
colorscheme Badwolf

" Phatogen
call pathogen#infect()
call pathogen#helptags() " Make :help work for bundles

" Leader
let mapleader = ","

set number
set guifont=Monaco\ for\ Powerline:h12
set enc=utf8
set smartindent
set autoindent
set ruler
set showcmd
set laststatus=2
set ignorecase
set smartcase
set go-=T
set mouse=a
set colorcolumn=80
set guioptions-=rL

" Tabs, spaces
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

" Show hidden characters
"set list
set listchars=tab:▸\ ,eol:¬

" Natural split opening positions
set splitbelow
set splitright

" Exit insert mode with jj
inoremap jj <ESC>

" Go to function-defintion. Can't hit <C-]> with non-US layout :(
nmap ø <C-]>

" Additional colors
hi VertSplit        guibg=gray17 guifg=gray17 ctermbg=8 ctermfg=8
hi LineNr           guibg=gray15              ctermbg=0 ctermfg=7
hi ColorColumn      guibg=gray17              ctermbg=8

" Tabs
nnoremap ( :tabprev<cr>
nnoremap ) :tabnext<cr>

" Powerline
set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim

" NERDTree
nnoremap <leader>t :NERDTreeToggle<cr>

" Toggle line numbers
nmap <C-N><C-N> :set invnumber<CR>

" reselect visual block after indent/outdent
vnoremap < <gv
vnoremap > >gv

" PHP DocBlock
"au BufRead,BufNewFile *.php inoremap <leader>p :call PhpDoc()<CR>
"au BufRead,BufNewFile *.php nnoremap <leader>p :PhpDoc()<CR>
"au BufRead,BufNewFile *.php vnoremap <leader>p :call PhpDocRange()<CR>

" Completion {{{

autocmd FileType php set omnifunc=phpcomplete#CompletePHP

set wildmenu
set wildmode=list:longest
set completeopt=menu

set wildignore+=.hg,.git,.svn " Version control
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg " binary images
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest " compiled object files
set wildignore+=*.spl " compiled spelling word lists
set wildignore+=*.sw? " Vim swap files
set wildignore+=*.DS_Store " OSX bullshit
set wildignore+=*.luac " Lua byte code
set wildignore+=*.orig " Merge resolution files

" }}}

" Backups {{{

set undodir=~/.vim/tmp/undo// " undo files
set backupdir=~/.vim/tmp/backup// " backups
set directory=~/.vim/tmp/swap// " swap files
set backup " enable backups
set noswapfile " It's 2012, Vim.

" }}}

" Source the vimrc file after saving it
if has("autocmd")
"  autocmd bufwritepost .vimrc source $MYVIMRC
endif

function! MyFoldText() " {{{
    let line = getline(v:foldstart)

    let nucolwidth = &fdc + &number * &numberwidth
    let windowwidth = winwidth(0) - nucolwidth - 3
    let foldedlinecount = v:foldend - v:foldstart

    " expand tabs into spaces
    let onetab = strpart(' ', 0, &tabstop)
    let line = substitute(line, '\t', onetab, 'g')

    let line = strpart(line, 0, windowwidth - 2 -len(foldedlinecount))
    let fillcharcount = windowwidth - len(line) - len(foldedlinecount)
    return line . '…' . repeat(" ",fillcharcount) . foldedlinecount . '…' . ' '
endfunction " }}}
set foldtext=MyFoldText()

